{"version":3,"sources":["components/Header.js","components/Book.js","components/Library.js","components/AddBookForm.js","sampleBooks.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","React","Component","Book","book","this","props","title","author","pages","read","onClick","toggle","bind","id","deleteBook","Library","_this","books","length","map","components_Book","key","AddBookForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","modalOpened","handleFormChange","assertThisInitialized","handleFormSubmit","openModal","event","setState","defineProperty","target","name","value","_this$state","addBook","reset","prevState","style","display","onSubmit","type","placeholder","required","onChange","min","checked","htmlFor","sampleBooks","App","library","localStorage","getItem","JSON","parse","handleToggle","preventDefault","newBook","Date","now","push","setItem","stringify","console","log","prevLibrary","filter","find","components_Header","components_AddBookForm","components_Library","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3682f98e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<header className=\"Header\">\r\n\t\t\t\t<h1>React Library</h1>\r\n\t\t\t</header>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass Book extends React.Component {\r\n\trender() {\r\n\t\tconst {book} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<tr className=\"card\">\r\n\t\t\t\t\t<td className=\"book-title\">{book.title}</td>\r\n\t\t\t\t\t<td className=\"book-author\">{book.author}</td>\r\n\t\t\t\t\t<td className=\"book-pages\">{book.pages}</td>\r\n\t\t\t\t\t\t{book.read ?\r\n\t\t\t\t\t\t<td><button className=\"toggle-read read\" onClick={this.props.toggle.bind(this, book.id)}>Read</button></td> : \r\n\t\t\t\t\t\t<td><button className=\"toggle-read not-read\" onClick={this.props.toggle.bind(this, book.id)}>Not read</button></td>}\r\n\t\t\t\t\t\t<td><button className=\"delete-btn\" onClick={this.props.deleteBook.bind(this, book.id)}>×</button></td>\r\n\t\t\t</tr>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Book;","import React from 'react';\r\nimport Book from './Book';\r\n\r\n\r\nclass Library extends React.Component {\r\n\trender() {\r\n\t\tconst {books} = this.props;\r\n\r\n\t\treturn(\r\n\t\t\t\t<div id=\"library\">\r\n\t\t\t\t\t{books.length > 0 ? (\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Title</th>\r\n\t\t\t\t\t\t\t\t<th>Author</th>\r\n\t\t\t\t\t\t\t\t<th>Pages</th>\r\n\t\t\t\t\t\t\t\t<th>Read?</th>\r\n\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{books.map((book) => (\r\n\t\t\t\t\t\t\t<Book key={book.id} book={book} deleteBook={this.props.deleteBook} toggle={this.props.toggle}/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>) : (\r\n\t\t\t\t\t<div className=\"no-books\">\r\n\t\t\t\t\t\t<p>You haven't added any books yet!</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Library;","import React from 'react';\r\n\r\nclass AddBookForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttitle: '',\r\n\t\t\tauthor: '',\r\n\t\t\tpages: '',\r\n\t\t\tread: '',\r\n\t\t\tmodalOpened: false\r\n\t\t}\r\n\t\tthis.handleFormChange = this.handleFormChange.bind(this);\r\n\t\tthis.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n\t\tthis.openModal = this.openModal.bind(this);\r\n\t}\r\n\r\n\thandleFormChange(event) {\r\n\t\tthis.setState({[event.target.name]: event.target.value});\r\n\t}\r\n\r\n\thandleFormSubmit(event) {\r\n\t\tconst { title, author, pages, read } = this.state;\r\n\r\n\t\tthis.props.addBook(event, title, author, pages, read);\r\n\r\n\t\tthis.setState({\r\n\t\t\ttitle: '',\r\n\t\t\tauthor: '',\r\n\t\t\tpages: '',\r\n\t\t\tread: '',\r\n\t\t});\r\n\t\tevent.target.reset();\r\n\t\tthis.openModal();\r\n\t}\r\n\t\r\n\r\n\topenModal() {\r\n\t\tthis.setState(prevState => ({modalOpened: !prevState.modalOpened}))\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"modal-wrapper\">\r\n\t\t\t\t<button id=\"open-modal-btn\" onClick={this.openModal}>Add Book</button>\r\n\t\t\t\t<div className=\"modal\" style={{display: this.state.modalOpened ? 'flex' : 'none' }}>\r\n\t\t\t\t\t<form className=\"add-book-form\" onSubmit={this.handleFormSubmit}>\r\n\t\t\t\t\t\t<div className=\"modal-header\">\r\n\t\t\t\t\t\t<span className=\"close\" onClick={this.openModal}>×</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t<input type=\"text\" name=\"title\" placeholder=\"Title\" required value={this.state.value} onChange={this.handleFormChange}/>\r\n\t\t\t\t\t\t\t<input type=\"text\" name=\"author\" placeholder=\"Author\" required value={this.state.value} onChange={this.handleFormChange}/>\r\n\t\t\t\t\t\t\t<input type=\"number\" min=\"1\" name=\"pages\" placeholder=\"Number of pages\" required value={this.state.value} onChange={this.handleFormChange}/>\r\n\t\t\t\t\t\t\t<div className=\"already-read\">\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"already-read\" checked={this.state.value} onChange={this.handleFormChange}/>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"already-read\">Already read?</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"modal-footer\">\r\n\t\t\t\t\t\t\t<button type=\"submit\"value=\"Submit\">Add book</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AddBookForm;","const sampleBooks = [\r\n\t{\r\n\t\ttitle: 'Dune',\r\n\t\tauthor: 'F. Herbert',\r\n\t\tpages: 412,\r\n\t\tread: true,\r\n\t\tid: 1\r\n\t},\r\n\r\n\t{\r\n\t\ttitle: 'Blood, Sweat, and Pixels',\r\n\t\tauthor: 'Jason Schreier',\r\n\t\tpages: 368,\r\n\t\tread: true,\r\n\t\tid: 2\r\n\t},\r\n\r\n\t{\r\n\t\ttitle: 'American Gods',\r\n\t\tauthor: 'Neil Gaiman',\r\n\t\tpages: 465,\r\n\t\tread: true,\r\n\t\tid: 3\r\n\t}\r\n]\r\n\r\nexport default sampleBooks;","import React from 'react';\nimport Header from './Header';\nimport Library from './Library';\nimport AddBookForm from './AddBookForm';\nimport sampleBooks from '../sampleBooks';\n\nclass App extends React.Component {\n\tconstructor(props) {\n  \tsuper(props);\n\n  \tthis.state = {\n  \t\tlibrary: (localStorage.getItem('library') === null) ? sampleBooks : JSON.parse(localStorage.getItem('library'))\n  \t}\n\n  \tthis.addBook = this.addBook.bind(this);\n  \tthis.deleteBook = this.deleteBook.bind(this);\n  \tthis.handleToggle = this.handleToggle.bind(this);\n  }\n\n  addBook(event, title, author, pages, read) {\n\t\tevent.preventDefault();\n\n\t\tconst library = this.state.library;\n\t\tconst now = Date.now();\n\t\tconst newBook = {\n\t\t\ttitle: title,\n\t\t\tauthor: author,\n\t\t\tpages: pages,\n\t\t\tread: read,\n\t\t\tid: now\n\t\t}\n\n\t\tlibrary.push(newBook);\n\t\tthis.setState({\n\t\t\tlibrary,\n\t\t\ttitle: '',\n\t\t\tauthor: '',\n\t\t\tpages: '',\n\t\t\tread: '',\n\t\t\tid: ''\n\t\t});\n\t\tlocalStorage.setItem('library', JSON.stringify(library));\n\t\tconsole.log(library);\n\t}\n\n\tdeleteBook(id) {\n\t\tconst prevLibrary = this.state.library;\n\t\tthis.setState(prevState => ({\n\t\t\tlibrary: prevLibrary.filter(book => book.id !== id)\n\t\t}), function() { localStorage.setItem('library', JSON.stringify(this.state.library)) })\n\t}\n\n\thandleToggle(id) {\n\t\tconst library = this.state.library;\n\t\tconst book = library.find(book => book.id === id);\n\t\tbook.read = !book.read;\n\t\tthis.setState({\n\t\t\tlibrary\n\t\t});\n\t\tlocalStorage.setItem('library', JSON.stringify(library));\n\t}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <main>\n\t        <AddBookForm addBook={this.addBook}/>\n\t        <Library \n\t        books={this.state.library}\n\t        deleteBook={this.deleteBook}\n\t        toggle={this.handleToggle} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport './css/App.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}